{"version":3,"sources":["components/Header/Header.js","components/MainContext.js","components/Point/Point.js","components/PoinstList/PoinstList.js","components/CustomMap/CustomMap.js","components/SearchInput/SearchInput.js","components/Content/Content.js","components/MainGrid.js","App.js","index.js"],"names":["useStyles","makeStyles","typographyStyles","flex","Header","classes","AppBar","position","Toolbar","Typography","className","fontSize","MainContext","React","createContext","useMainContext","useContext","MainContextProvider","children","useState","currentPoint","setCurrentPoint","pointsList","setPointsList","searchInputValue","setSearchInputValue","ymaps","setYmaps","polyline","useRef","searchInputRef","map","setMap","Provider","value","addPointToList","coords","locateName","prev","id","uusdv4","pointsListChangeHandler","point","deletePoint","filter","inputChangeHandler","event","target","inputClearHandler","myMapRef","events","add","e","balloon","close","theme","root","flexGrow","marginLeft","spacing","backgroundColor","idx","marginRight","Point","props","draggableId","key","index","provided","snapshot","ListItem","ref","innerRef","draggableProps","dragHandleProps","style","isDragging","draggableStyle","background","divider","Grid","container","item","xs","variant","color","component","onClick","panTo","IconButton","edge","aria-label","maxWidth","marginTop","padding","overflow","maxHeight","PointList","onDragEnd","result","destination","source","droppableId","newPointsList","choosePoint","splice","List","droppableProps","placeholder","width","height","margin","mapState","center","zoom","controls","myPlacemark","geometry","type","coordinates","options","draggable","MyMap","instanceRef","behaviors","disable","console","log","defaultState","modules","onLoad","SuggestView","current","get","focus","properties","balloonContentHeader","balloonContentBody","iconContent","newCoords","getCoordinates","geocode","then","geoObjects","getAddressLine","balloonCloseButton","strokeColor","strokeWidth","strokeOpacity","input","SearchInput","onChange","onAdd","noValidate","autoComplete","Input","inputRef","inputProps","onKeyDown","preventDefault","coord","myTitle","textAlign","Content","query","load","apikey","sm","MainGrid","direction","md","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ce4ef4.chunk.js","sourcesContent":["import React from 'react'\nimport {makeStyles} from '@material-ui/styles'\nimport Typography from '@material-ui/core/Typography'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport ExploreIcon from '@material-ui/icons/Explore';\n\nconst useStyles = makeStyles(() => ({\n    typographyStyles: {\n        flex: 1\n    }\n}))\n\nfunction Header() {\n    const classes = useStyles()\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography className={classes.typographyStyles}>\n                    Art_Map\n                </Typography>\n                <ExploreIcon fontSize=\"large\" />\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header","import React, {useContext, useState, useRef} from 'react'\nimport {v4 as uusdv4} from 'uuid'\n\nconst MainContext = React.createContext()\n\nexport const useMainContext = () => {\n    return useContext(MainContext)\n}\n\nexport function MainContextProvider({ children }) {\n    const [currentPoint, setCurrentPoint] = useState('')\n    const [pointsList, setPointsList] = useState([])\n    const [searchInputValue, setSearchInputValue] = useState('')\n    const [ymaps, setYmaps] = useState(null)\n    const polyline = useRef(null)\n    const searchInputRef = useRef(null)\n\n    const [map, setMap] = useState(null)\n\n    const addPointToList = (coords, locateName) => {\n        setPointsList((prev) => [...prev, {\n            id: uusdv4(),\n            coords,\n            locateName\n        }])\n    }\n\n    const pointsListChangeHandler = (id, coords, locateName) => {\n        setPointsList(prev => {\n            return prev.map(point => {\n                if (point.id === id) {\n                    return {id, coords, locateName}\n                }\n                return point\n            })\n        })\n    }\n    \n    const deletePoint = id => {\n        setPointsList(prev => prev.filter(point => point.id !== id))\n    }\n\n    const inputChangeHandler = event => {\n        setSearchInputValue(event.target.value)\n    }\n\n    const inputClearHandler = () => {\n        setSearchInputValue('')\n    }\n\n    const myMapRef = ymaps => {\n        if (ymaps) {\n            setYmaps(ymaps)\n            ymaps.events.add('click', e => {\n                ymaps.balloon.close()\n            })\n        }\n    }\n\n    return (\n        <MainContext.Provider value={{\n            currentPoint,\n            setCurrentPoint,\n            pointsList,\n            setPointsList,\n            searchInputValue,\n            setSearchInputValue,\n            addPointToList,\n            pointsListChangeHandler,\n            deletePoint,\n            inputChangeHandler,\n            inputClearHandler,\n            ymaps,\n            setYmaps,\n            polyline,\n            searchInputRef,\n            myMapRef,\n            map, \n            setMap\n        }}>\n            { children }\n        </MainContext.Provider>\n    )\n}","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid' \nimport ListItem from '@material-ui/core/ListItem'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Typography from '@material-ui/core/Typography';\nimport {useMainContext} from '../MainContext'\nimport {Draggable} from 'react-beautiful-dnd'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginLeft: theme.spacing(0),\n        \"&:hover\": {\n            backgroundColor: 'rgb(231, 190, 250)'\n        }\n    },\n    idx: {\n        marginRight: theme.spacing(2)\n    }, \n}))\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    ...draggableStyle,  \n    ...(isDragging && {\n      background: \"rgb(231, 190, 250)\"\n    })\n  });\n\nexport default function Point(props) {\n    const { point, idx } = props\n    const classes = useStyles(props)\n\n    const {deletePoint, map} = useMainContext()\n\n    return (\n        <Draggable draggableId={point.id} key={point.id}  index={idx}>\n            {(provided, snapshot) => (\n                <ListItem \n                    className={classes.root}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                    )}\n                    divider\n                >\n                    <Grid container spacing={3}>\n                        <Grid item xs={1}>\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\n                                {idx+1}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={8} onClick={() => map.panTo(point.coords)}>\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">\n                                {point.locateName}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {point.coords[0]}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {point.coords[1]}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={3}>\n                            <IconButton \n                                onClick={() => deletePoint(point.id)} \n                                edge=\"end\" \n                                aria-label=\"delete\" \n                                color=\"secondary\"\n                            >\n                                <DeleteIcon  />\n                            </IconButton>\n                        </Grid>\n                        </Grid>\n                </ListItem>\n            )}\n        </Draggable>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport {useMainContext} from '../MainContext';\nimport Point from '../Point/Point'\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: '90%',\n        marginTop: 20,\n        padding: 0,\n        position: 'relative',\n        overflow: 'auto',\n        maxHeight: 500,\n        backgroundColor: '#E6E6FA'\n    },\n    \n}))\n\nexport default function PointList() {\n    const classes = useStyles()\n    const {pointsList, setPointsList} = useMainContext()\n\n    const onDragEnd = result => {\n        const {destination, source} = result\n\n        if (!destination) return\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) { return }\n\n        const newPointsList = pointsList\n\n        const choosePoint = newPointsList.splice(source.index, 1)\n        newPointsList.splice(destination.index, 0, choosePoint[0])\n\n        setPointsList(prev => prev = [...newPointsList])\n    }\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <Droppable droppableId={`myList`}>\n                    {(provided) => (\n                        <List\n                            ref={provided.innerRef} \n                            {...provided.droppableProps}\n                            component=\"nav\" \n                            className={classes.root} \n                        >\n                            {pointsList.map((point, idx) => (\n                                <Point key={point.id} point={point} idx={idx}/>\n                            ))}\n                            {provided.placeholder}\n                        </List>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Map, Placemark, Polyline } from 'react-yandex-maps'\nimport { useMainContext } from '../MainContext';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        height: '100%',\n        padding: 0,\n        margin: 0\n    }\n}))\n\nconst mapState = {\n    center: [59.935850, 30.315635],\n    zoom: 10, \n    controls: ['zoomControl'],\n}\n\nconst myPlacemark = {\n    geometry: {\n        type: 'point',\n        coordinates: []\n    },\n    options: {\n        draggable: true\n    }\n}\n\nexport default function MyMap() {\n    const classes = useStyles()\n \n    const {\n        pointsList,\n        pointsListChangeHandler,\n        ymaps,\n        setYmaps,\n        polyline,\n        setSearchInputValue,\n        setMap,\n        searchInputRef\n    } = useMainContext()\n\n    const onYMapsLoad = ymaps => {\n        setYmaps(ymaps)\n        new ymaps.SuggestView(searchInputRef.current.id).events.add('select', e => {\n            setSearchInputValue(e.get('item').value)\n            searchInputRef.current.focus()\n        })\n    }\n    \n    return (\n        <>\n            <Map\n                instanceRef={map => {\n                    try {map.behaviors.disable('scrollZoom')}\n                    catch(e) {console.log(e)}\n                    setMap(map)\n                }}\n                className={classes.root} \n                defaultState={mapState}\n                modules={['control.ZoomControl', 'SuggestView']}\n                onLoad={onYMapsLoad}\n            >\n                {pointsList.map((point, idx) => (\n                    <Placemark\n                        key={point.id}\n                        geometry={point.coords}\n                        properties={{\n                            balloonContentHeader: idx+1,\n                            balloonContentBody: `x: ${point.coords[0]}, y: ${point.coords[1]}`,\n                            iconContent: idx+1\n                        }}\n                        options={myPlacemark.options}\n                        // instanceRef={ref => {\n                        //     if(ref) {\n                        //         ref.geometry.events.add('change', e => {\n                        //             polyline.current.geometry.set(idx, e.get('newCoordinates'))\n                        //         })\n                        //     }\n                        // }}\n                        onDragEnd={e => {\n                            const newCoords = e.get('target').geometry.getCoordinates()\n                            ymaps.geocode(newCoords).then(result => {\n                                const locateName = result.geoObjects.get(0).getAddressLine()\n                                pointsListChangeHandler(point.id, newCoords, locateName)\n                            })\n                        }}\n                    />\n                ))}\n                <Polyline \n                    geometry={pointsList.map(point => point.coords)}\n                    instanceRef={polyline}\n                    options={{\n                      balloonCloseButton: false,\n                      strokeColor: \"#000\",\n                      strokeWidth: 4,\n                      strokeOpacity: 0.5\n                    }}    \n                />\n            </Map>\n        </>\n    )\n}","import React from 'react'\nimport Input from '@material-ui/core/Input';\nimport { makeStyles } from '@material-ui/styles';\nimport {useMainContext} from '../MainContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: 20,\n        marginLeft: 20\n    }, \n    input: {\n        width: '80%'\n    }\n}))\n\nexport default function SearchInput({locateName, onChange, onAdd}) {\n    const classes = useStyles()\n\n    const {\n        setCurrentPoint, \n        addPointToList, \n        ymaps, \n        searchInputRef, \n        searchInputValue, \n        inputClearHandler, \n        inputChangeHandler,\n        map\n    } = useMainContext()\n\n    const keyDownInputHandler = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            \n            ymaps.geocode(e.target.value).then(result => {\n                const coord = result.geoObjects.get(0).geometry.getCoordinates()\n                const locateName = result.geoObjects.get(0).getAddressLine()\n                setCurrentPoint(coord)\n                addPointToList(coord, locateName)\n                map.panTo(coord)\n            })\n\n            inputClearHandler()\n        }\n    }\n\n\n    return (\n        <div>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <Input\n                    id=\"mySuggest\" \n                    className={classes.input} \n                    onChange={inputChangeHandler}\n                    value={searchInputValue}\n                    inputRef={searchInputRef} \n                    placeholder=\"Введите ваш адрес + Enter\" \n                    inputProps={{ 'aria-label': 'description' }} \n                    onKeyDown={keyDownInputHandler}\n                />\n            </form>\n        </div>\n    )\n}","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid' \nimport Typography from '@material-ui/core/Typography';\nimport PointsList from '../PoinstList/PoinstList'\nimport CustomMap from '../CustomMap/CustomMap'\nimport {MainContextProvider} from '../MainContext'\nimport SearchInput from '../SearchInput/SearchInput'\nimport { YMaps } from 'react-yandex-maps'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 40,\n        height: 600\n    },\n    myTitle: {\n        textAlign: 'center'\n    }\n\n}))\n\nexport default function Content() {\n    const classes = useStyles()\n\n    return(\n        <YMaps query={{ load: 'package.full', apikey: 'ae030262-3ac2-4dbc-84f7-8d851146cd07' }}>\n            <MainContextProvider>\n                <Grid className={classes.root} container >\n                    <Grid container>\n                        <Grid item xs sm={4}>\n                            <Typography variant=\"h6\" className={classes.myTitle}>\n                                Мой маршрут\n                            </Typography>\n                            <SearchInput />\n                            <PointsList />\n                        </Grid>\n                        <Grid item xs={12} sm={8}>\n                            <CustomMap />\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </MainContextProvider>\n        </YMaps>\n    )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid' \nimport Header from \"./Header/Header\"\nimport Content from './Content/Content';\n\nexport default function MainGrid() {\n    return (\n        <Grid container direction=\"column\">\n            <Grid item>\n                <Header />\n            </Grid>\n            <Grid item container>\n                <Grid item xs={false} md={1} />\n                <Grid item xs={12} md={10}>\n                    <Content />\n                </Grid>\n                <Grid item xs={false} md={1} />\n            </Grid>\n        </Grid>\n    )\n}","import React from 'react';\nimport './App.css';\nimport MainGrid from './components/MainGrid'\n\nfunction App() {\n  return (\n    <MainGrid />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}